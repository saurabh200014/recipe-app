{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","Response","json","data","hits","console","log","navigator","serviceWorker","register","then","resp","warn","catch","e","error","onSubmit","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAuBeA,EApBF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YAChC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAMN,IACN,6BAEQG,EAAYI,KAAI,SAAAC,GAAU,OACtB,6BAEQA,EAAWC,YAM/B,4BAAIR,IACJ,qBAAKS,IAAKR,EAAOS,IAAI,SC2ClBC,EAxDL,WACR,IAEA,EAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAuBJ,mBAAS,WAAhC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRC,MACA,CAACH,IACH,IAAMG,EAAU,uCAAC,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAVf,WAUe,oBATd,uCAQG,cACTM,EADS,gBAEEA,EAASC,OAFX,OAETC,EAFS,OAGfX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJF,2CAAD,qDAehB,OACE,sBAAKvB,UAAU,MAAf,6CAIM0B,UAAUC,cAAcC,SAAS,UAAUC,MAAK,SAACC,GAC/CN,QAAQO,KAAK,OAAOD,MACnBE,OAAM,SAACC,GAAKT,QAAQU,MAAMD,MANnC,OAQMT,QAAQU,MAAM,kBAIlB,uBAAMC,SAlBM,SAAAF,GACdA,EAAEG,iBACFrB,EAASH,GACTC,EAAU,KAemBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAaqC,KAAK,OAAOC,MAAO1B,EAAQ2B,SAtB5C,SAAAN,GAAIpB,EAAUoB,EAAEO,OAAOF,OAE1Cd,QAAQC,IAAIb,MAqBN,wBAASZ,UAAU,gBAAgBqC,KAAK,SAAxC,uBAEF,sBAAKrC,UAAU,UAAf,UAEEU,EAAQP,KAAI,SAAAD,GAAM,OAChB,cAAC,EAAD,CAAkCN,MAAOM,EAAOA,OAAOuC,MAAO5C,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MACrHC,YAAaG,EAAOA,OAAOH,aADdG,EAAOA,OAAOuC,UAH/B,WCpCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.6b6bbf19.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport React from 'react';\r\nimport  style  from './recipe.module.css';\r\nconst Recipe=({title,calories,image,ingredients})=>{\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1 >{title}</h1>\r\n            <ol>\r\n                {\r\n                    ingredients.map(ingredient=>(\r\n                        <li>\r\n                            {\r\n                                ingredient.text\r\n                            }\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ol>\r\n            <p>{calories}</p>\r\n            <img src={image} alt=\"\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default Recipe;","/* eslint-disable */\n\nimport React,{useEffect,useState} from 'react'; \nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App=()=>{\n  const APP_ID=\"78018ef5\";\n  const APP_KEY=\"5f147eaa4978c4acb5d069d5e0b4f98d\t\";\n  const [recipes,setRecipes]=useState([]);\n  const [search,setSearch]=useState(\"\");\n  const [query,setQuery]=useState('chicken');\n \n  useEffect(()=>{\n    getRecipes();\n  },[query]);\n  const getRecipes=async()=>{\n    const Response=await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data=await Response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n\n  }\n  const updateSearch=e=>{setSearch(e.target.value);\n\n  console.log(search);}\n  const getSearch=e=>{\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n  return(\n    <div className=\"App\">\n     \n      \n        if('serviceWorker' in navigator){\n          navigator.serviceWorker.register('/sw.js').then((resp)=>{\n            console.warn(\"resp\",resp)\n          }).catch((e)=>{console.error(e)})\n        }else{\n          console.error(\"sw not working\")\n        }\n      \n     \n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n        <button  className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipes\">\n      {\n        recipes.map(recipe=>(\n          <Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}/>\n        ))\n      };\n      </div>\n     \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2RTOn\"};"],"sourceRoot":""}